// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Andrei Varabyeu",
            "email": "andrei.varabyeu@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/browsers": {
            "post": {
                "description": "create webdriver session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "browsers"
                ],
                "summary": "createWDSession",
                "parameters": [
                    {
                        "description": "browser request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_browserkube_browserkube_pkg_wd_wdproto.CreateBrowserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/v1.Browser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/browsers/{sessionID}": {
            "delete": {
                "description": "delete webdriver session",
                "tags": [
                    "browsers"
                ],
                "summary": "deleteWDSession",
                "parameters": [
                    {
                        "type": "string",
                        "description": "session ID",
                        "name": "sessionID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/browsers": {
            "get": {
                "description": "get a list of browsers",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "browsers"
                ],
                "summary": "listBrowsers",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "manual session",
                        "name": "manual",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/browserkube_internal_api.Browser"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/results": {
            "get": {
                "description": "get results of sessions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "browsers"
                ],
                "summary": "results",
                "parameters": [
                    {
                        "type": "string",
                        "description": "page size",
                        "name": "pageSize",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "page token",
                        "name": "pageToken",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_browserkube_browserkube_pkg_util.Page-browserkube_internal_api_SessionResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/results/{sessionID}": {
            "get": {
                "description": "get result of sessions by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "browsers"
                ],
                "summary": "resultByID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sessionID",
                        "name": "sessionID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/browserkube_internal_api.SessionResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sessions": {
            "get": {
                "description": "get all sessions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "browsers"
                ],
                "summary": "sessions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/browserkube_internal_api.Session"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sessions/{sessionID}": {
            "delete": {
                "description": "delete session result",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "browsers"
                ],
                "summary": "deleteSessionResult",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sessionID",
                        "name": "sessionID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sessions/{sessionID}/commands": {
            "get": {
                "tags": [
                    "browsers"
                ],
                "summary": "get list commands",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sessionID",
                        "name": "sessionID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "for the first request always indicate - first page",
                        "name": "pageToken",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "pageSize",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/browserkube_internal_api.CommandLogResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sessions/{sessionID}/files/{filePath}": {
            "get": {
                "tags": [
                    "browsers"
                ],
                "summary": "get session file commands",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sessionID",
                        "name": "sessionID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "filePath",
                        "name": "filePath",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sessions/{sessionID}/screenshots": {
            "get": {
                "tags": [
                    "browsers"
                ],
                "summary": "get list screenshots",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sessionID",
                        "name": "sessionID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "create a screenshot",
                "tags": [
                    "browsers"
                ],
                "summary": "createScreenshot",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sessionID",
                        "name": "sessionID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sessions/{sessionID}/screenshots/{screenshotID}": {
            "get": {
                "description": "get a screenshot",
                "tags": [
                    "browsers"
                ],
                "summary": "get screenshot by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "sessionID",
                        "name": "sessionID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "screenshotID",
                        "name": "screenshotID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/snippet": {
            "get": {
                "description": "get code snippet",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "browsers"
                ],
                "summary": "getSnippet",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "manual session",
                        "name": "manual",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/browserkube_internal_api.Browser"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/status": {
            "get": {
                "description": "get status of sessions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "browsers"
                ],
                "summary": "status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/browserkube_internal_api.Status"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "browserkube_internal_api.Browser": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "platformName": {
                    "type": "string"
                },
                "resolutions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "browserkube_internal_api.CommandLog": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string"
                },
                "commandId": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "request": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "response": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "sessionId": {
                    "type": "string"
                },
                "statusCode": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "browserkube_internal_api.CommandLogResponse": {
            "type": "object",
            "properties": {
                "commands": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/browserkube_internal_api.CommandLog"
                    }
                },
                "newPageToken": {
                    "type": "string"
                }
            }
        },
        "browserkube_internal_api.Resolution": {
            "type": "object",
            "properties": {
                "height": {
                    "type": "integer"
                },
                "width": {
                    "type": "integer"
                }
            }
        },
        "browserkube_internal_api.Session": {
            "type": "object",
            "properties": {
                "browser": {
                    "type": "string"
                },
                "browserVersion": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "details": {
                    "type": "object",
                    "additionalProperties": true
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "logsOn": {
                    "type": "boolean"
                },
                "logsRefAddr": {
                    "type": "string"
                },
                "manual": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "platformName": {
                    "type": "string"
                },
                "screenResolution": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "videoCodec": {
                    "type": "string"
                },
                "videoFps": {
                    "type": "integer"
                },
                "videoName": {
                    "type": "string"
                },
                "videoRecOn": {
                    "type": "boolean"
                },
                "videoRefAddr": {
                    "type": "string"
                },
                "videoSize": {
                    "$ref": "#/definitions/browserkube_internal_api.Resolution"
                },
                "vncOn": {
                    "type": "boolean"
                },
                "vncPsw": {
                    "type": "string"
                }
            }
        },
        "browserkube_internal_api.SessionResult": {
            "type": "object",
            "properties": {
                "browser": {
                    "type": "string"
                },
                "browserVersion": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "details": {
                    "type": "object",
                    "additionalProperties": true
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "logsOn": {
                    "type": "boolean"
                },
                "logsRefAddr": {
                    "type": "string"
                },
                "manual": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "platformName": {
                    "type": "string"
                },
                "screenResolution": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "videoCodec": {
                    "type": "string"
                },
                "videoFps": {
                    "type": "integer"
                },
                "videoName": {
                    "type": "string"
                },
                "videoRecOn": {
                    "type": "boolean"
                },
                "videoRefAddr": {
                    "type": "string"
                },
                "videoSize": {
                    "$ref": "#/definitions/browserkube_internal_api.Resolution"
                },
                "vncOn": {
                    "type": "boolean"
                },
                "vncPsw": {
                    "type": "string"
                }
            }
        },
        "browserkube_internal_api.Status": {
            "type": "object",
            "properties": {
                "maxTimeout": {
                    "$ref": "#/definitions/time.Duration"
                },
                "quotesLimit": {
                    "type": "integer"
                },
                "stats": {
                    "$ref": "#/definitions/browserkube_internal_api.StatusStats"
                }
            }
        },
        "browserkube_internal_api.StatusStats": {
            "type": "object",
            "properties": {
                "all": {
                    "type": "integer"
                },
                "connecting": {
                    "type": "integer"
                },
                "queued": {
                    "type": "integer"
                },
                "running": {
                    "type": "integer"
                }
            }
        },
        "github_com_browserkube_browserkube_pkg_util.Page-browserkube_internal_api_SessionResult": {
            "type": "object",
            "properties": {
                "continueToken": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/browserkube_internal_api.SessionResult"
                    }
                },
                "remaining": {
                    "type": "integer"
                }
            }
        },
        "github_com_browserkube_browserkube_pkg_wd_wdproto.CreateBrowserRequest": {
            "type": "object",
            "properties": {
                "browserName": {
                    "type": "string"
                },
                "browserVersion": {
                    "type": "string"
                },
                "platformName": {
                    "type": "string"
                },
                "recordVideo": {
                    "type": "boolean"
                },
                "screenResolution": {
                    "type": "string"
                },
                "sessionName": {
                    "type": "string"
                }
            }
        },
        "time.Duration": {
            "type": "integer",
            "enum": [
                -9223372036854775808,
                9223372036854775807,
                1,
                1000,
                1000000,
                1000000000,
                60000000000,
                3600000000000
            ],
            "x-enum-varnames": [
                "minDuration",
                "maxDuration",
                "Nanosecond",
                "Microsecond",
                "Millisecond",
                "Second",
                "Minute",
                "Hour"
            ]
        },
        "v1.Browser": {
            "type": "object",
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n+optional",
                    "type": "string"
                },
                "kind": {
                    "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n+optional",
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/v1.ObjectMeta"
                },
                "spec": {
                    "$ref": "#/definitions/v1.BrowserSpec"
                },
                "status": {
                    "$ref": "#/definitions/v1.BrowserStatus"
                }
            }
        },
        "v1.BrowserExtension": {
            "type": "object",
            "properties": {
                "extensionId": {
                    "type": "string"
                },
                "updateUrl": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "v1.BrowserSpec": {
            "type": "object",
            "properties": {
                "browserName": {
                    "type": "string"
                },
                "browserVersion": {
                    "type": "string"
                },
                "caps": {
                    "description": "+optional",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "enableVNC": {
                    "description": "nolint: tagliatelle",
                    "type": "boolean"
                },
                "enableVideo": {
                    "description": "video recording options",
                    "type": "boolean"
                },
                "extensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.BrowserExtension"
                    }
                },
                "platformName": {
                    "type": "string"
                },
                "screenResolution": {
                    "type": "string"
                },
                "timeZone": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "v1.BrowserStatus": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "phase": {
                    "description": "INSERT ADDITIONAL STATUS FIELD - define observed state of cluster\nImportant: Run \"make\" to regenerate code after modifying this file",
                    "type": "string"
                },
                "podName": {
                    "type": "string"
                },
                "portConfig": {
                    "$ref": "#/definitions/v1.PortConfig"
                },
                "reason": {
                    "type": "string"
                },
                "seleniumURL": {
                    "type": "string"
                },
                "vncPass": {
                    "type": "string"
                }
            }
        },
        "v1.FieldsV1": {
            "type": "object"
        },
        "v1.ManagedFieldsEntry": {
            "type": "object",
            "properties": {
                "apiVersion": {
                    "description": "APIVersion defines the version of this resource that this field set\napplies to. The format is \"group/version\" just like the top-level\nAPIVersion field. It is necessary to track the version of a field\nset because it cannot be automatically converted.",
                    "type": "string"
                },
                "fieldsType": {
                    "description": "FieldsType is the discriminator for the different fields format and version.\nThere is currently only one possible value: \"FieldsV1\"",
                    "type": "string"
                },
                "fieldsV1": {
                    "description": "FieldsV1 holds the first JSON version format as described in the \"FieldsV1\" type.\n+optional",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.FieldsV1"
                        }
                    ]
                },
                "manager": {
                    "description": "Manager is an identifier of the workflow managing these fields.",
                    "type": "string"
                },
                "operation": {
                    "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created.\nThe only valid values for this field are 'Apply' and 'Update'.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1.ManagedFieldsOperationType"
                        }
                    ]
                },
                "subresource": {
                    "description": "Subresource is the name of the subresource used to update that object, or\nempty string if the object was updated through the main resource. The\nvalue of this field is used to distinguish between managers, even if they\nshare the same name. For example, a status update will be distinct from a\nregular update using the same manager name.\nNote that the APIVersion field is not related to the Subresource field and\nit always corresponds to the version of the main resource.",
                    "type": "string"
                },
                "time": {
                    "description": "Time is the timestamp of when the ManagedFields entry was added. The\ntimestamp will also be updated if a field is added, the manager\nchanges any of the owned fields value or removes a field. The\ntimestamp does not update when a field is removed from the entry\nbecause another manager took it over.\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.ManagedFieldsOperationType": {
            "type": "string",
            "enum": [
                "Apply",
                "Update"
            ],
            "x-enum-varnames": [
                "ManagedFieldsOperationApply",
                "ManagedFieldsOperationUpdate"
            ]
        },
        "v1.ObjectMeta": {
            "type": "object",
            "properties": {
                "annotations": {
                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "creationTimestamp": {
                    "description": "CreationTimestamp is a timestamp representing the server time when this object was\ncreated. It is not guaranteed to be set in happens-before order across separate operations.\nClients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system.\nRead-only.\nNull for lists.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "deletionGracePeriodSeconds": {
                    "description": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional",
                    "type": "integer"
                },
                "deletionTimestamp": {
                    "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This\nfield is set by the server when a graceful deletion is requested by the user, and is not\ndirectly settable by a client. The resource is expected to be deleted (no longer visible\nfrom resource lists, and not reachable by name) after the time in this field, once the\nfinalizers list is empty. As long as the finalizers list contains items, deletion is blocked.\nOnce the deletionTimestamp is set, this value may not be unset or be set further into the\nfuture, although it may be shortened or the resource may be deleted prior to this time.\nFor example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react\nby sending a graceful termination signal to the containers in the pod. After that 30 seconds,\nthe Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup,\nremove the pod from the API. In the presence of network partitions, this object may still\nexist after this timestamp, until an administrator or automated process can determine the\nresource is fully terminated.\nIf not set, graceful deletion of the object has not been requested.\n\nPopulated by the system when a graceful deletion is requested.\nRead-only.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n+optional",
                    "type": "string"
                },
                "finalizers": {
                    "description": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "generateName": {
                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional",
                    "type": "string"
                },
                "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional",
                    "type": "integer"
                },
                "labels": {
                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n+optional",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "managedFields": {
                    "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.ManagedFieldsEntry"
                    }
                },
                "name": {
                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n+optional",
                    "type": "string"
                },
                "namespace": {
                    "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n+optional",
                    "type": "string"
                },
                "ownerReferences": {
                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1.OwnerReference"
                    }
                },
                "resourceVersion": {
                    "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional",
                    "type": "string"
                },
                "selfLink": {
                    "description": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.\n+optional",
                    "type": "string"
                },
                "uid": {
                    "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n+optional",
                    "type": "string"
                }
            }
        },
        "v1.OwnerReference": {
            "type": "object",
            "properties": {
                "apiVersion": {
                    "description": "API version of the referent.",
                    "type": "string"
                },
                "blockOwnerDeletion": {
                    "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nSee https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion\nfor how the garbage collector interacts with this field and enforces the foreground deletion.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.\n+optional",
                    "type": "boolean"
                },
                "controller": {
                    "description": "If true, this reference points to the managing controller.\n+optional",
                    "type": "boolean"
                },
                "kind": {
                    "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                },
                "name": {
                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                    "type": "string"
                },
                "uid": {
                    "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                    "type": "string"
                }
            }
        },
        "v1.PortConfig": {
            "type": "object",
            "properties": {
                "browser": {
                    "type": "string"
                },
                "clipboard": {
                    "type": "string"
                },
                "devTools": {
                    "type": "string"
                },
                "fileServer": {
                    "type": "string"
                },
                "sidecar": {
                    "type": "string"
                },
                "vnc": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/browserkube",
	Schemes:          []string{},
	Title:            "BrowserKube",
	Description:      "Kubernetes-native browser farm",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
