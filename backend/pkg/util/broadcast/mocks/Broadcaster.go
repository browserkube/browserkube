// Code generated by mockery v2.24.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Broadcaster is an autogenerated mock type for the Broadcaster type
type Broadcaster[T interface{}] struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *Broadcaster[T]) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Deregister provides a mock function with given fields: _a0
func (_m *Broadcaster[T]) Deregister(_a0 chan<- T) {
	_m.Called(_a0)
}

// Register provides a mock function with given fields: _a0
func (_m *Broadcaster[T]) Register(_a0 chan<- T) {
	_m.Called(_a0)
}

// Submit provides a mock function with given fields: _a0
func (_m *Broadcaster[T]) Submit(_a0 T) {
	_m.Called(_a0)
}

// TrySubmit provides a mock function with given fields: _a0
func (_m *Broadcaster[T]) TrySubmit(_a0 T) bool {
	ret := _m.Called(_a0)

	var r0 bool
	if rf, ok := ret.Get(0).(func(T) bool); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

type mockConstructorTestingTNewBroadcaster interface {
	mock.TestingT
	Cleanup(func())
}

// NewBroadcaster creates a new instance of Broadcaster. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewBroadcaster[T interface{}](t mockConstructorTestingTNewBroadcaster) *Broadcaster[T] {
	mock := &Broadcaster[T]{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
