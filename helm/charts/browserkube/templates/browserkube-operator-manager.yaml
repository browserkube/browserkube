apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: operator
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: operator
    control-plane: browserkube-controller-manager
  name: browserkube-operator-controller-manager-metrics-service
  namespace: '{{.Release.Namespace | default "default" }}'
spec:
  ports:
    - name: https
      port: 8443
      protocol: TCP
      targetPort: https
  selector:
    control-plane: browserkube-controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: operator
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: operator
    control-plane: browserkube-controller-manager
  name: browserkube-operator-controller-manager
  namespace: '{{.Release.Namespace | default "default" }}'
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: browserkube-controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: browserkube-controller-manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - arm64
                      - ppc64le
                      - s390x
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
      containers:
        - args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=0
          image: gcr.io/kubebuilder/kube-rbac-proxy:v0.15.0
          name: kube-rbac-proxy
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 5m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
        - args:
            - --health-probe-bind-address=:8081
            - --metrics-bind-address=127.0.0.1:8080
            - --leader-elect
            - "--sidecar-image={{.Values.sidecar.image}}"
            - "--recorder-image={{.Values.recorder.image}}"
            - "--extension-installer-image={{.Values.extensionInstaller.image}}"
            - "--x-server-image={{.Values.xServer.image}}"
            - "--vnc-server-image={{.Values.vncServer.image}}"
            - "--clipboard-image={{.Values.clipboard.image}}"
            - "--browser-user-configmap={{ .Release.Name }}-browsers-usergroup"
            - "--browser-extension-configmap={{ .Release.Name }}-browser-extension-config"
            - "--browser-readinessprobe-configmap={{ .Release.Name }}-browsers-readinessprobe-config"
{{/*          command:*/}}
{{/*            - /manager*/}}
          image: "{{ .Values.operator.image }}"
          name: manager
          {{- if .Values.healthcheck.enabled }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          {{ end }}
          {{- if .Values.resources.enabled }}
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
          {{ end }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
      securityContext:
        runAsNonRoot: {{.Values.operator.runAsNonRoot | default "true" }}
        {{- if .Values.operator.runAsUser }}
        runAsUser: {{.Values.operator.runAsUser }}
        {{ end }}
        {{- if .Values.operator.runAsGroup }}
        runAsGroup: {{.Values.operator.runAsGroup }}
        {{ end }}
      serviceAccountName: controller-manager
      terminationGracePeriodSeconds: 10