// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	registry "github.com/browserkube/browserkube/browser-updater/internal/registry"
)

// RegistryClient is an autogenerated mock type for the RegistryClient type
type RegistryClient struct {
	mock.Mock
}

// CheckRegistry provides a mock function with given fields: _a0, imageName
func (_m *RegistryClient) CheckRegistry(_a0 string, imageName string) (*registry.RegistryImageListResp, error) {
	ret := _m.Called(_a0, imageName)

	var r0 *registry.RegistryImageListResp
	var r1 error
	if rf, ok := ret.Get(0).(func(string, string) (*registry.RegistryImageListResp, error)); ok {
		return rf(_a0, imageName)
	}
	if rf, ok := ret.Get(0).(func(string, string) *registry.RegistryImageListResp); ok {
		r0 = rf(_a0, imageName)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*registry.RegistryImageListResp)
		}
	}

	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(_a0, imageName)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewRegistryClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewRegistryClient creates a new instance of RegistryClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRegistryClient(t mockConstructorTestingTNewRegistryClient) *RegistryClient {
	mock := &RegistryClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
